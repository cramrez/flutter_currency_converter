// Mocks generated by Mockito 5.0.2 from annotations
// in flutter_currency_converter/test/repository_test/currency_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:flutter_currency_converter/src/database/currency_database.dart'
    as _i6;
import 'package:flutter_currency_converter/src/model/currency.dart' as _i3;
import 'package:flutter_currency_converter/src/provider/currency_provider.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tuple/tuple.dart' as _i2;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

class _FakeTuple2<T1, T2> extends _i1.Fake implements _i2.Tuple2<T1, T2> {}

class _FakeCurrency extends _i1.Fake implements _i3.Currency {}

/// A class which mocks [CurrencyProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockCurrencyProvider extends _i1.Mock implements _i4.CurrencyProvider {
  MockCurrencyProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Tuple2<Map<String, num>, int>> latest() =>
      (super.noSuchMethod(Invocation.method(#latest, []),
              returnValue: Future.value(_FakeTuple2<Map<String, num>, int>()))
          as _i5.Future<_i2.Tuple2<Map<String, num>, int>>);
  @override
  _i5.Future<Map<String, String>> symbols() =>
      (super.noSuchMethod(Invocation.method(#symbols, []),
              returnValue: Future.value(<String, String>{}))
          as _i5.Future<Map<String, String>>);
}

/// A class which mocks [CurrencyDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCurrencyDatabase extends _i1.Mock implements _i6.CurrencyDatabase {
  MockCurrencyDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<int> insert(_i3.Currency? item) =>
      (super.noSuchMethod(Invocation.method(#insert, [item]),
          returnValue: Future.value(0)) as _i5.Future<int>);
  @override
  _i5.Future<List<_i3.Currency>> getCurrencies() =>
      (super.noSuchMethod(Invocation.method(#getCurrencies, []),
              returnValue: Future.value(<_i3.Currency>[]))
          as _i5.Future<List<_i3.Currency>>);
  @override
  _i5.Future<_i3.Currency> getCurrency(String? key) => (super.noSuchMethod(
      Invocation.method(#getCurrency, [key]),
      returnValue: Future.value(_FakeCurrency())) as _i5.Future<_i3.Currency>);
  @override
  _i5.Future<int> getEnabledCurrencyCount() =>
      (super.noSuchMethod(Invocation.method(#getEnabledCurrencyCount, []),
          returnValue: Future.value(0)) as _i5.Future<int>);
  @override
  _i5.Future<void> enableCurrency(String? key, int? position) =>
      (super.noSuchMethod(Invocation.method(#enableCurrency, [key, position]),
          returnValue: Future.value(null),
          returnValueForMissingStub: Future.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> disableCurrency(String? key) =>
      (super.noSuchMethod(Invocation.method(#disableCurrency, [key]),
          returnValue: Future.value(null),
          returnValueForMissingStub: Future.value()) as _i5.Future<void>);
  @override
  _i5.Future<_i3.Currency?> getSelectedCurrency() => (super.noSuchMethod(
      Invocation.method(#getSelectedCurrency, []),
      returnValue: Future.value(_FakeCurrency())) as _i5.Future<_i3.Currency?>);
  @override
  _i5.Future<int> setSelectedCurrency(String? key) =>
      (super.noSuchMethod(Invocation.method(#setSelectedCurrency, [key]),
          returnValue: Future.value(0)) as _i5.Future<int>);
}
